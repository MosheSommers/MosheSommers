{"version":3,"sources":["Areas/Content.tsx","SharedStyles.tsx","Areas/Footer.tsx","Areas/Header.tsx","Areas/SideBar.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Content","SharedStyles","header","css","Footer","className","Header","props","ref","React","useRef","useEffect","setHeaderHeight","current","clientHeight","SideBar","App","useState","headerHeight","Styles","MainContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAaA,EAAU,kBAAM,2CCEhBC,EACI,SAACC,GAAD,OAAqBC,YAApB,IAAD,yHAGPD,EAAM,iBCJHE,EAAS,kBAAM,qBAAKC,UAAWJ,IAAhB,qBCKfK,EAAS,SAACC,GACnB,IAAMC,EAAsCC,IAAMC,OAAO,MAGzD,OADAD,IAAME,WAAU,WAAO,IAAD,IAAEJ,EAAMK,gBAAN,iBAAsBJ,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAKK,eAA3B,aAAsB,EAAcC,oBAApC,QAAoD,KAAM,QAACN,QAAD,IAACA,OAAD,EAACA,EAAKK,UACjF,qBAAKL,IAAKA,EAAKH,UAAWJ,GAA0B,GAApD,qBCXEc,EAAU,kBAAM,2CCoBdC,MAhBf,WAGE,MAA+FP,IAAMQ,SAAS,GAA9G,mBAAOC,EAAP,KAAqBN,EAArB,KACA,OACE,gCACE,cAAC,EAAD,CAAcA,gBAAiBA,IAC/B,sBAAKP,UAAWc,EAAOC,cAAcF,GAArC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,QAOAC,EAAS,CACbC,cAAc,SAACF,GAAD,OAAwBf,YAAvB,MAAD,sFACGe,KCZJG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5fa91e6f.chunk.js","sourcesContent":["export const Content = () => <div>Content</div>;","import { css } from '@emotion/css';\r\n\r\nexport const SharedStyles = {\r\n    HeaderFooder:(header?:boolean) => css`\r\n        width:100%;\r\n        position:fixed;\r\n        ${header ? `top` : `bottom`}:0;\r\n        background-color:#fff;\r\n    `,\r\n}","import { SharedStyles } from '../SharedStyles';\r\n\r\nexport const Footer = () => <div className={SharedStyles.HeaderFooder()}>Footer</div>;","import React from 'react';\r\nimport { SharedStyles } from '../SharedStyles';\r\n\r\ninterface HeaderProps{\r\n    setHeaderHeight:(height:number) => void //used to send height ot be used to position other elements\r\n}\r\n\r\nexport const Header = (props:HeaderProps) => {\r\n    const ref:React.LegacyRef<HTMLDivElement> = React.useRef(null);\r\n    //After loading get height to set main content under header\r\n    React.useEffect(() => { props.setHeaderHeight(ref?.current?.clientHeight ?? 0) }, [ref?.current])\r\n    return <div ref={ref} className={SharedStyles.HeaderFooder(true)}>Header</div>;\r\n}","export const SideBar = () => <div>SideBar</div>;","import { css } from '@emotion/css';\nimport React from 'react';\nimport * as Areas from './Areas/Areas';\n\nfunction App() {\n\n  //Used to move content and sidebar under fixed header\n  const [headerHeight, setHeaderHeight]:[number, React.Dispatch<React.SetStateAction<number>>] = React.useState(0)\n  return (\n    <div>\n      <Areas.Header setHeaderHeight={setHeaderHeight}/>\n      <div className={Styles.MainContainer(headerHeight)}>\n        <Areas.SideBar />\n        <Areas.Content />\n      </div>\n      <Areas.Footer />\n    </div>\n  );\n}\n\nexport default App;\n\nconst Styles = {\n  MainContainer:(headerHeight:number)=> css`\n      margin-top:${headerHeight}px;\n      display:flex;\n      gap:14px;\n  `\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}