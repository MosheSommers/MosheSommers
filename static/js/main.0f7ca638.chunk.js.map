{"version":3,"sources":["Areas/Content.tsx","SharedStyles.tsx","Areas/Footer.tsx","Components/MenuButton.tsx","Components/Menu.tsx","Areas/Header.tsx","Areas/SideBar.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Content","SharedStyles","header","css","Colors","BackGround","Text","Background2","White","Footer","className","MenuButton","props","Styles","onClick","label","Menu","Buttons","map","ButtonProps","index","MenuButtons","console","log","Header","ref","React","useRef","useEffect","setHeaderHeight","current","clientHeight","SideBar","App","useState","headerHeight","MainContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAaA,EAAU,kBAAM,2CCEhBC,EACI,SAACC,GAAD,OAAqBC,YAApB,IAAD,wHAGPD,EAAM,eACWE,EAAOC,aAIrBD,EAAS,CAClBE,KAAM,UACND,WAAW,UACXE,YAAY,UACZC,MAAM,QCbGC,EAAS,kBAAM,qBAAKC,UAAWT,IAAhB,qB,OCOfU,EAAa,SAACC,GAAD,OAA2B,qBAAKF,UAAWG,EAAOF,aAAcG,QAASF,EAAME,QAApD,SAA8DF,EAAMG,SAEnHF,EAAS,CACXF,WAAW,kBAAMR,YAAL,MAAD,gIAGGC,EAAOI,MACIJ,EAAOG,eCRvBS,EAAO,SAACJ,GAAD,OAChB,qBAAKF,UAAWG,EAAOG,OAAvB,SAAgCJ,EAAMK,QAAQC,KAAI,SAACC,EAAaC,GAAd,OAAwB,cAAC,EAAD,eAA4BD,GAAXC,SAGzFP,EAAS,CACXG,KAAK,kBAAIb,YAAH,MAAD,4IAEyBC,EAAOG,eCNnCc,EAAgC,CAClC,CAACN,MAAQ,QAASD,QAAQ,kBAAMQ,QAAQC,IAAI,WAC5C,CAACR,MAAQ,OAAQD,QAAQ,kBAAMQ,QAAQC,IAAI,UAC3C,CAACR,MAAQ,UAAWD,QAAQ,kBAAMQ,QAAQC,IAAI,cAGrCC,EAAS,SAACZ,GACnB,IAAMa,EAAsCC,IAAMC,OAAO,MAIzD,OADAD,IAAME,WAAU,WAAO,IAAD,IAAEhB,EAAMiB,gBAAN,iBAAsBJ,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAKK,eAA3B,aAAsB,EAAcC,oBAApC,QAAoD,KAAM,QAACN,QAAD,IAACA,OAAD,EAACA,EAAKK,UAEpF,qBAAKL,IAAKA,EAAKf,UAAWT,GAA0B,GAApD,SACI,cAAC,EAAD,CAAMgB,QAASI,OCtBdW,EAAU,kBAAM,2CCqBdC,MAhBf,WAGE,MAA+FP,IAAMQ,SAAS,GAA9G,mBAAOC,EAAP,KAAqBN,EAArB,KACA,OACE,sBAAKnB,UAAWG,EAAOoB,MAAvB,UACE,cAAC,EAAD,CAAcJ,gBAAiBA,IAC/B,sBAAKnB,UAAWG,EAAOuB,cAAcD,GAArC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,QAOAtB,EAAS,CACboB,IAAI,kBAAK9B,YAAJ,MAAD,yDAEMC,EAAOE,OAEjB8B,cAAc,SAACD,GAAD,OAAwBhC,YAAvB,IAAD,wFACGgC,KCjBJE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f7ca638.chunk.js","sourcesContent":["export const Content = () => <div>Content</div>;","import { css } from '@emotion/css';\r\n\r\nexport const SharedStyles = {\r\n    HeaderFooder:(header?:boolean) => css`\r\n        width:100%;\r\n        position:fixed;\r\n        ${header ? `top` : `bottom`}:0;\r\n        background-color:${Colors.BackGround};\r\n    `,\r\n}\r\n\r\nexport const Colors = {\r\n    Text :'#777a7f',\r\n    BackGround:'#ccade1',\r\n    Background2:'#777a7f',\r\n    White:'#fff',\r\n  }","import { SharedStyles } from '../SharedStyles';\r\n\r\nexport const Footer = () => <div className={SharedStyles.HeaderFooder()}>Footer</div>;","import { css } from '@emotion/css';\r\nimport { SyntheticEvent } from 'react';\r\nimport { Colors } from '../SharedStyles';\r\n\r\nexport interface MenuButtonProps{\r\n    label:string;\r\n    onClick:(e:SyntheticEvent)=>void;\r\n}\r\n\r\nexport const MenuButton = (props:MenuButtonProps) => <div className={Styles.MenuButton()} onClick={props.onClick}>{props.label}</div>;\r\n\r\nconst Styles = {\r\n    MenuButton:() => css`\r\n      padding:10px;\r\n      &:hover{\r\n          color:${Colors.White};\r\n          background-color:${Colors.Background2};\r\n      }  \r\n    `\r\n}","import { css } from '@emotion/css';\r\nimport { Colors } from '../SharedStyles';\r\nimport { MenuButton, MenuButtonProps } from './MenuButton';\r\n\r\ninterface MenuProps{\r\n    Buttons:MenuButtonProps[];\r\n}\r\n\r\nexport const Menu = (props:MenuProps) => (\r\n    <div className={Styles.Menu()}>{props.Buttons.map((ButtonProps, index) => <MenuButton key={index} {...ButtonProps}/>)}</div>\r\n);\r\n\r\nconst Styles = {\r\n    Menu:()=>css`\r\n        display:flex;\r\n        border-bottom:2px solid ${Colors.Background2};\r\n        width: fit-content;\r\n        margin: 10px 0;\r\n    `\r\n}","import React from 'react';\r\nimport { Menu } from '../Components/Menu';\r\nimport { MenuButtonProps } from '../Components/MenuButton';\r\nimport { SharedStyles } from '../SharedStyles';\r\n\r\ninterface HeaderProps{\r\n    setHeaderHeight:(height:number) => void //used to send height ot be used to position other elements\r\n}\r\n\r\nconst MenuButtons:MenuButtonProps[] = [\r\n    {label : 'About', onClick:() => console.log('about')},\r\n    {label : 'Blog', onClick:() => console.log('blog')},\r\n    {label : 'Contact', onClick:() => console.log('contact')},\r\n];\r\n\r\nexport const Header = (props:HeaderProps) => {\r\n    const ref:React.LegacyRef<HTMLDivElement> = React.useRef(null);\r\n    //After loading get height to set main content under header\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    React.useEffect(() => { props.setHeaderHeight(ref?.current?.clientHeight ?? 0) }, [ref?.current])\r\n    return (\r\n        <div ref={ref} className={SharedStyles.HeaderFooder(true)}>\r\n            <Menu Buttons={MenuButtons} />\r\n        </div>\r\n    );\r\n}","export const SideBar = () => <div>SideBar</div>;","import { css } from '@emotion/css';\nimport React from 'react';\nimport * as Areas from './Areas/Areas';\nimport { Colors } from './SharedStyles';\n\nfunction App() {\n\n  //Used to move content and sidebar under fixed header\n  const [headerHeight, setHeaderHeight]:[number, React.Dispatch<React.SetStateAction<number>>] = React.useState(0)\n  return (\n    <div className={Styles.App()}>\n      <Areas.Header setHeaderHeight={setHeaderHeight}/>\n      <div className={Styles.MainContainer(headerHeight)}>\n        <Areas.SideBar />\n        <Areas.Content />\n      </div>\n      <Areas.Footer />\n    </div>\n  );\n}\n\nexport default App;\n\nconst Styles = {\n  App:() =>css`\n    margin:10px;\n    color:${Colors.Text};\n  `,\n  MainContainer:(headerHeight:number)=> css`\n      margin-top:${headerHeight}px;\n      display:flex;\n      gap:14px;\n  `\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}